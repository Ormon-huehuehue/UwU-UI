{
  "files": [
    {
      "path": "src/components/3D-button.tsx",
      "content": "\"use client\";\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\n\ninterface ButtonProps {\n  label?: string;\n  link?: string;\n  height?: number;\n  width?: number;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  label = \"Get started\",\n  link = \"#\",\n  height = 80,\n  width = 234,\n  className = \"\",\n  style = {}\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isPressed, setIsPressed] = useState(false);\n\n  const holeStyle = {\n    background: \"linear-gradient(180deg, rgb(123, 156, 166) 0%, rgb(61, 111, 125) 20.289625563063062%, rgb(61, 111, 125) 50%, rgba(145, 184, 191, 0) 62.762176238738746%)\",\n    borderRadius: \"100px\",\n    boxShadow: isHovered \n      ? \"inset 1px 1px 0.5px 0px rgb(173, 173, 173), -1px -1px 0.5px 0px rgb(237, 237, 237), 2px 0.5px 1px 0px rgb(255, 255, 255), 0px 0px 1px 2px rgb(209, 207, 207), -2px -2px 1px 0px rgb(194, 194, 194), 0px 10px 10px 0px rgba(0, 0, 0, 0.15)\"\n      : \"inset 1px 1px 0.5px 0px rgb(173, 173, 173), -1px -1px 0.5px 0px rgb(237, 237, 237), 2px 0.5px 1px 0px rgb(255, 255, 255), 0px 0px 1px 2px rgb(209, 207, 207), -2px -2px 1px 0px rgb(194, 194, 194), 0px 0px 10px 0px rgba(0, 0, 0, 0)\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    gap: \"10px\",\n    height: \"80px\",\n    justifyContent: \"flex-end\",\n    overflow: \"visible\",\n    padding: \"0px\",\n    position: \"relative\",\n    width: \"min-content\",\n    zIndex: 3\n  };\n\n  const holeMaskStyle = {\n    borderRadius: \"40px\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flex: \"none\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    gap: \"10px\",\n    height: \"108%\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    padding: isPressed ? \"20px 0px 0px 0px\" : isHovered ? \"0px 0px 6px 0px\" : \"5px 0px 0px 0px\",\n    position: \"relative\",\n    width: \"min-content\",\n    willChange: \"transform\"\n  };\n\n  const buttonContentStyle = {\n    background: \"linear-gradient(160deg, rgb(95, 230, 245) 19%, rgb(125, 212, 250) 79%)\",\n    borderRadius: \"104px\",\n    boxShadow: \"inset 0px 1px 0px 0px rgba(255, 255, 255, 0.7), 0px 6px 0px 0px rgb(111, 189, 222)\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flex: \"none\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    gap: \"10px\",\n    height: \"min-content\",\n    justifyContent: \"flex-end\",\n    overflow: \"hidden\",\n    padding: \"6px\",\n    position: \"relative\",\n    width: \"min-content\",\n    willChange: \"transform\"\n  };\n\n  const textWrapStyle = {\n    background: \"linear-gradient(116deg, rgb(125, 227, 232) 0%, rgb(148, 219, 255) 100%)\",\n    borderRadius: \"88px\",\n    boxShadow: \"inset 0px -1px 0px 0px rgba(227, 248, 255, 0.7), inset 0px 3px 0px 0px rgb(76, 182, 212), inset 4px 8px 0px 0px rgba(0, 0, 0, 0.05)\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flex: \"none\",\n    flexDirection: \"column\",\n    flexWrap: \"nowrap\",\n    gap: \"10px\",\n    height: \"68px\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    padding: \"0px 60px 0px 60px\",\n    position: \"relative\",\n    width: \"min-content\",\n    willChange: \"transform\"\n  };\n\n  const textStyle = {\n    fontFamily: '\"Inter Variable\", \"Inter\", sans-serif',\n    fontSize: \"20px\",\n    fontWeight: 540,\n    letterSpacing: \"-0.01em\",\n    color: \"rgb(30, 59, 69)\",\n    textShadow: \"0px 1px 0.2px rgba(190, 228, 250, 0.6), 0px -0.5px 0px rgba(9, 13, 15, 0.2)\",\n    userSelect: \"none\",\n    flex: \"none\",\n    height: \"auto\",\n    position: \"relative\",\n    whiteSpace: \"pre\",\n    width: \"auto\",\n    margin: 0\n  };\n\n  const iconSvg = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 15.5 16\" overflow=\"visible\">\n      <g>\n        <defs>\n          <path d=\"M 0 2 C 0 0.895 0.895 0 2 0 L 10.97 0 C 11.496 0 12 0.207 12.374 0.576 L 14.892 3.058 C 15.273 3.434 15.488 3.946 15.488 4.481 L 15.498 13.998 C 15.499 15.103 14.603 16 13.498 16 L 12.5 16 C 12.5 16 10.373 10.651 7.887 8.166 C 5.401 5.68 0 3.171 0 3.171 Z\" id=\"iconPath\"></path>\n          <linearGradient id=\"iconGradient\" x1=\"1\" x2=\"0\" y1=\"0.010276222795295109\" y2=\"0.989723777204705\">\n            <stop offset=\"0\" stop-color=\"rgb(207, 207, 207)\" stop-opacity=\"1\"></stop>\n            <stop offset=\"1\" stop-color=\"rgb(235, 235, 235)\" stop-opacity=\"1\"></stop>\n          </linearGradient>\n        </defs>\n        <use href=\"#iconPath\" fill=\"url(#iconGradient)\"></use>\n      </g>\n    </svg>\n  `;\n\n  const iconStyle = {\n    height: \"16px\",\n    width: \"16px\",\n    position: \"absolute\",\n    overflow: \"visible\"\n  };\n\n  const containerStyle = {\n    alignContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    gap: \"10px\",\n    height: \"min-content\",\n    justifyContent: \"center\",\n    overflow: \"visible\",\n    padding: \"0px\",\n    position: \"relative\",\n    textDecoration: \"none\",\n    width: \"min-content\",\n    ...style\n  };\n\n  const ButtonComponent = () => (\n    <div\n      className={className}\n      style={containerStyle}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => {\n        setIsHovered(false);\n        setIsPressed(false);\n      }}\n      onMouseDown={() => setIsPressed(true)}\n      onMouseUp={() => setIsPressed(false)}\n    >\n      {/* Main hole container */}\n      <div style={holeStyle}>\n        {/* Hole mask */}\n        <div style={holeMaskStyle}>\n          {/* Button content */}\n          <div style={buttonContentStyle}>\n            {/* Text wrap */}\n            <div style={textWrapStyle}>\n              <p style={textStyle}>{label}</p>\n            </div>\n          </div>\n        </div>\n        \n        {/* Corner icons */}\n        {/* Top-left icon (rotated -90deg) */}\n        <div\n          style={{\n            ...iconStyle,\n            left: \"-2px\",\n            top: \"-2px\",\n            transform: \"rotate(-90deg)\"\n          }}\n          dangerouslySetInnerHTML={{ __html: iconSvg }}\n        />\n        \n        {/* Top-right icon */}\n        <div\n          style={{\n            ...iconStyle,\n            right: \"-2px\",\n            top: \"-2px\"\n          }}\n          dangerouslySetInnerHTML={{ __html: iconSvg }}\n        />\n        \n        {/* Bottom-right icon (rotated 90deg) */}\n        <div\n          style={{\n            ...iconStyle,\n            right: \"-2px\",\n            bottom: \"-2px\",\n            transform: \"rotate(90deg)\"\n          }}\n          dangerouslySetInnerHTML={{ __html: iconSvg }}\n        />\n        \n        {/* Bottom-left icon (rotated 180deg) */}\n        <div\n          style={{\n            ...iconStyle,\n            left: \"-2px\",\n            bottom: \"-2px\",\n            transform: \"rotate(180deg)\"\n          }}\n          dangerouslySetInnerHTML={{ __html: iconSvg }}\n        />\n      </div>\n    </div>\n  );\n\n  // If link is provided and it's not just a hash, wrap in Link component\n  if (link && link !== \"#\") {\n    return (\n      <Link href={link} style={{ textDecoration: \"none\" }}>\n        <ButtonComponent />\n      </Link>\n    );\n  }\n\n  return <ButtonComponent />;\n};\n\nexport default Button;"
    }
  ]
}
