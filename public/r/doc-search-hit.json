{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "doc-search-hit",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "author": "daniel petho <https://www.danielpetho.com>",
  "files": [
    {
      "path": "components/doc-search-hit.tsx",
      "content": "import { useState } from \"react\"\nimport Link from \"next/link\"\nimport { CornerDownLeft, File, Hash, Text } from \"lucide-react\"\n\ninterface DocSearchHitProps {\n  hit: any\n}\n\nexport function DocSearchHit({ hit }: DocSearchHitProps) {\n  // Compose hierarchy string\n  const hierarchy = [hit.hierarchy.lvl0, hit.hierarchy.lvl1, hit.hierarchy.lvl2]\n    .filter(Boolean)\n    .join(\" / \")\n  const mainHierarchy = hit.hierarchy.lvl1 || \"\"\n\n  // Determine which icon to show based on hierarchy and content\n  let LeadingIcon = Text\n  if (!hit.content || hit.content.trim() === \"\") {\n    if (hit.hierarchy.lvl2) {\n      LeadingIcon = Hash\n    } else if (hit.hierarchy.lvl1) {\n      LeadingIcon = File\n    }\n  }\n\n  // Determine what to show as the main content\n  let mainContent = null\n  let mainContentHighlight = null\n  if (!hit.content || hit.content.trim() === \"\") {\n    if (hit.hierarchy.lvl2) {\n      mainContent = hit.hierarchy.lvl2\n      mainContentHighlight =\n        hit._highlightResult?.hierarchy?.lvl2?.value || hit.hierarchy.lvl2\n    } else if (hit.hierarchy.lvl1) {\n      mainContent = hit.hierarchy.lvl1\n      mainContentHighlight =\n        hit._highlightResult?.hierarchy?.lvl1?.value || hit.hierarchy.lvl1\n    }\n  }\n\n  return (\n    <Link\n      href={hit.url}\n      className=\"w-full px-2 py-3 flex gap-4 items-center cursor-pointer rounded-xl\"\n    >\n      <LeadingIcon className=\"w-4 h-4 text-foreground shrink-0 stroke-[1.5px]\" />\n      <div className=\"min-w-0 flex-1\">\n        <div className=\"items-center gap-2 text-foreground flex\">\n          <span className=\"text-sm font-medium truncate\">\n            <style jsx>{`\n              mark {\n                color: #2563eb;\n                background: none;\n                font-weight: 600;\n                padding: 0;\n                overflow: hidden;\n              }\n            `}</style>\n            {mainContent ? (\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: mainContentHighlight,\n                }}\n              />\n            ) : (\n              <span\n                dangerouslySetInnerHTML={{\n                  __html:\n                    hit._snippetResult?.content?.value ||\n                    hit._highlightResult?.content?.value ||\n                    hit.content,\n                }}\n              />\n            )}\n          </span>\n        </div>\n        {hierarchy &&\n          hit.type !== \"lvl1\" &&\n          (hit._highlightResult?.hierarchy?.lvl1?.value !== mainContent ||\n            hit._highlightResult?.hierarchy?.lvl1?.value !== mainHierarchy) && (\n            <div className=\"text-xs text-muted-foreground leading-tight truncate\">\n              <style jsx>{`\n                mark {\n                  color: #2563eb;\n                  background: none;\n                  font-weight: 600;\n                  padding: 0;\n                }\n              `}</style>\n              <span\n                dangerouslySetInnerHTML={{\n                  __html:\n                    hit._highlightResult?.hierarchy?.lvl1?.value ||\n                    mainHierarchy,\n                }}\n              />\n            </div>\n          )}\n      </div>\n      <div className=\"ml-auto\" data-enter-icon>\n        <CornerDownLeft className=\"w-4 h-4 text-foreground stroke-[1.5px]\" />\n      </div>\n    </Link>\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/fancy/components/doc-search-hit.tsx"
    }
  ]
}