{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hover-2-seats",
  "type": "registry:ui",
  "dependencies": [
    "motion"
  ],
  "author": "daniel petho <https://www.danielpetho.com>",
  "files": [
    {
      "path": "components/Hover-2-seats.tsx",
      "content": "'use client';\n\nimport React, { useState, useId, useEffect } from 'react';\nimport { motion, LayoutGroup } from 'motion/react';\nimport Link from 'next/link';\n\ninterface ButtonProps {\n  title?: string;\n  link?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  width?: number;\n  height?: number;\n}\n\ninterface TextShimmerProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst TextShimmer: React.FC<TextShimmerProps> = ({ \n  className = \"\",\n  style = {}\n}) => {\n  const [variant, setVariant] = useState<'IOngpcJws' | 'vX7vyFWHI'>('IOngpcJws');\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setVariant(prev => prev === 'IOngpcJws' ? 'vX7vyFWHI' : 'IOngpcJws');\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [variant]);\n\n  const transition1 = {\n    bounce: 0,\n    delay: 0,\n    duration: 0.8,\n    type: \"spring\" as const\n  };\n\n  return (\n    <motion.div\n      className={`framer-text-shimmer ${className}`}\n      style={{\n        height: '56px',\n        overflow: 'hidden',\n        position: 'relative',\n        width: '268px',\n        ...style\n      }}\n      initial={false}\n      animate={variant}\n      transition={transition1}\n      variants={{\n        IOngpcJws: {\n          mask: \"linear-gradient(94deg, rgba(0, 0, 0, 0.5) -43%, rgb(0, 0, 0) -22%, rgba(0, 0, 0, 0.5) -2%)\",\n          WebkitMask: \"linear-gradient(94deg, rgba(0, 0, 0, 0.5) -43%, rgb(0, 0, 0) -22%, rgba(0, 0, 0, 0.5) -2%)\"\n        },\n        vX7vyFWHI: {\n          mask: \"linear-gradient(94deg, rgba(0, 0, 0, 0.5) 107%, rgb(0, 0, 0) 127%, rgba(0, 0, 0, 0.5) 150%)\",\n          WebkitMask: \"linear-gradient(94deg, rgba(0, 0, 0, 0.5) 107%, rgb(0, 0, 0) 127%, rgba(0, 0, 0, 0.5) 150%)\"\n        }\n      }}\n    >\n      <motion.div\n        style={{\n          flex: 'none',\n          height: 'auto',\n          left: '50%',\n          position: 'absolute',\n          top: '50%',\n          whiteSpace: 'pre',\n          width: 'auto',\n          transform: 'translate(-50%, -50%)',\n          fontFamily: '\"Inter\", \"Inter Placeholder\", sans-serif',\n          fontSize: '10px',\n          fontWeight: '600',\n          color: 'rgb(69, 68, 68)',\n        }}\n      >\n        2 seats remaining\n      </motion.div>\n    </motion.div>\n  );\n};\n\nconst Button: React.FC<ButtonProps> = ({ \n  title = \"Buy now\", \n  link = \"#\", \n  className = \"\",\n  style = {},\n  width = 117,\n  height = 44\n}) => {\n  const [variant, setVariant] = useState<'ccJtameEa' | 'lRxDmf3nw'>('ccJtameEa');\n  const [isHovered, setIsHovered] = useState(false);\n  const layoutId = useId();\n\n  const transition1 = {\n    bounce: 0.2,\n    delay: 0,\n    duration: 0.4,\n    type: \"spring\" as const\n  };\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n    setVariant('lRxDmf3nw');\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    setVariant('ccJtameEa');\n  };\n\n  return (\n    <LayoutGroup id={layoutId}>\n      <motion.div\n        animate={variant}\n        initial={false}\n        transition={transition1}\n      >\n        <Link href={link} style={{ textDecoration: 'none' }}>\n          <motion.a\n            className={`framer-button-root ${className}`}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={variant === 'lRxDmf3nw' ? handleMouseLeave : undefined}\n            style={{\n              // Main container styles from .framer-f27ri3\n              alignContent: 'center',\n              alignItems: 'center',\n              cursor: 'pointer',\n              display: 'flex',\n              flexDirection: 'column',\n              flexWrap: 'nowrap',\n              gap: '10px',\n              height: 'min-content',\n              justifyContent: 'center',\n              overflow: 'visible',\n              padding: '4px',\n              position: 'relative',\n              textDecoration: 'none',\n              width: 'min-content',\n              borderRadius: '10px',\n              ...style\n            }}\n            transition={transition1}\n          >\n            {/* Background with shimmer - absolute positioned */}\n            <motion.div\n              className=\"framer-bg\"\n              style={{\n                // Styles from .framer-3dentx\n                alignContent: 'center',\n                alignItems: 'center',\n                bottom: '0px',\n                display: 'flex',\n                flex: 'none',\n                flexDirection: 'column',\n                flexWrap: 'nowrap',\n                gap: '0px',\n                justifyContent: 'flex-start',\n                left: '0px',\n                overflow: 'hidden',\n                padding: '2px 0px 0px 0px',\n                position: 'absolute',\n                right: '0px',\n                top: '0px',\n                backgroundColor: 'rgb(243, 243, 243)',\n                borderRadius: '12px',\n                zIndex: 1,\n              }}\n              variants={{\n                ccJtameEa: { top: '0px' },\n                lRxDmf3nw: { top: '-23px' }\n              }}\n              transition={transition1}\n            >\n              <motion.div\n                className=\"framer-shimmer\"\n                style={{\n                  // Styles from .framer-1nagu1x\n                  flex: 'none',\n                  height: '24px',\n                  overflow: 'hidden',\n                  position: 'relative',\n                  width: '102px',\n                  backgroundColor: 'rgb(244, 244, 244)',\n                  borderRadius: '10px',\n                  opacity: 0,\n                  zIndex: 2,\n                }}\n                variants={{\n                  ccJtameEa: { opacity: 0 },\n                  lRxDmf3nw: { opacity: 1 }\n                }}\n                transition={transition1}\n              >\n                <div\n                  style={{\n                    // Styles from .framer-wx9o7a-container\n                    WebkitUserSelect: 'none',\n                    userSelect: 'none',\n                    flex: 'none',\n                    height: '20px',\n                    left: '0px',\n                    position: 'absolute',\n                    right: '-1px',\n                    top: 'calc(50% - 10px)',\n                    zIndex: 0,\n                  }}\n                >\n                  <TextShimmer \n                    style={{ \n                      height: '100%', \n                      width: '100%' \n                    }} \n                  />\n                </div>\n              </motion.div>\n            </motion.div>\n\n            {/* Button content - main visible part */}\n            <motion.div\n              className=\"framer-button-content\"\n              style={{\n                // Styles from .framer-dnfvxf\n                alignContent: 'center',\n                alignItems: 'center',\n                display: 'flex',\n                flex: 'none',\n                flexDirection: 'column',\n                flexWrap: 'nowrap',\n                gap: '10px',\n                height: '36px',\n                justifyContent: 'center',\n                overflow: 'hidden',\n                padding: '0px 26px 0px 26px',\n                position: 'relative',\n                width: 'min-content',\n                backgroundColor: 'rgb(255, 255, 255)',\n                borderRadius: '8px',\n                boxShadow: '0px 1px 7px 0px rgba(0, 0, 0, 0.08)',\n                zIndex: 3,\n              }}\n            >\n              <div\n                style={{\n                  // Styles from .framer-1vlgpym\n                  WebkitUserSelect: 'none',\n                  userSelect: 'none',\n                  flex: 'none',\n                  height: 'auto',\n                  position: 'relative',\n                  whiteSpace: 'pre',\n                  width: 'auto',\n                  zIndex: 1,\n                  fontFamily: '\"Inter\", \"Inter Placeholder\", sans-serif',\n                  fontSize: '14px',\n                  fontWeight: '600',\n                  letterSpacing: '-0.01em',\n                  color: 'rgb(39, 43, 45)',\n                }}\n              >\n                {title}\n              </div>\n            </motion.div>\n          </motion.a>\n        </Link>\n      </motion.div>\n    </LayoutGroup>\n  );\n};\n\nexport default Button;",
      "type": "registry:ui",
      "target": "components/fancy/components/Hover-2-seats.tsx"
    }
  ]
}