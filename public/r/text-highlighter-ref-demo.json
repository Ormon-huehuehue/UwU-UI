{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "text-highlighter-ref-demo",
  "type": "registry:block",
  "dependencies": [],
  "author": "daniel petho <https://www.danielpetho.com>",
  "registryDependencies": [
    "https://uwuui.com/r/text-highlighter.json"
  ],
  "files": [
    {
      "path": "examples/text/text-highlighter-ref-demo.tsx",
      "content": "\"use client\"\n\nimport { useRef, useState } from \"react\"\n\nimport {\n  TextHighlighter,\n  TextHighlighterRef,\n} from \"@/fancy/components/text/text-highlighter\"\n\nexport default function TextHighlighterDemo() {\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const highlighterRefs = useRef<TextHighlighterRef[]>([])\n  const [isHighlighted, setIsHighlighted] = useState(false)\n\n  const transition = { type: \"spring\", duration: 1, delay: 0, bounce: 0 }\n  const highlightClass = \"rounded-[0.3em] px-px\"\n  const highlightColor = \"#F7F764\"\n\n  const handleHighlight = () => {\n    highlighterRefs.current.forEach((ref) => {\n      ref.animate()\n    })\n    setIsHighlighted(true)\n  }\n\n  const handleReset = () => {\n    highlighterRefs.current.forEach((ref) => {\n      ref.reset()\n    })\n    setIsHighlighted(false)\n  }\n\n  return (\n    <div className=\"w-dvw h-dvh bg-[#fefefe] relative p-0\">\n      <div\n        className=\"h-full w-full z-10 bg-[#fefefe] overflow-scroll\"\n        ref={containerRef}\n      >\n        <div className=\"max-w-5xl mx-auto px-12 mt-20 pb-32\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 text-xs leading-relaxed\">\n            <div className=\"space-y-2\">\n              <p>\n                The present-day designer has a host of printing types at his\n                disposal. Since{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  Gutenberg\n                </TextHighlighter>{\" \"}\n                first invented movable type in 1436-55 hundreds of different\n                types have been designed and cast in lead. The{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  most recent technical developments\n                </TextHighlighter>{\" \"}\n                with computer and photo-typesetting have once again brought new\n                faces or variations of old ones on the market.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <p>\n                Knowledge of the quality of a typeface is of the greatest\n                importance for the{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  functional, aesthetic and psychological effect\n                </TextHighlighter>{\" \"}\n                of printed matter. Again, the typographic design, i.e. the\n                correct spaces between letters and words and the length and\n                spacing of lines conducive to easy reading, does much to enhance\n                the impression created.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <p>\n                By studying the classic designs of{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  Garamond, Caslon, Bodoni, Walbaum\n                </TextHighlighter>{\" \"}\n                and others, the designer can learn what the timeless criteria\n                are which produce a refined and artistic typeface that makes for\n                ease of reading.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <p>\n                The lead type designs of{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  Berthold, Helvetica, Folio, Univers\n                </TextHighlighter>{\" \"}\n                etc. produce pleasant and easily legible type areas. The\n                typographic rules that apply to the roman typefaces are also\n                valid for the sans serifs.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <p>\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  The creators of these type designs\n                </TextHighlighter>{\" \"}\n                were extremely intelligent artists with high creative powers.\n                This is shown by the fact that for more than four centuries\n                innumerable type designers have sought to create new type\n                alphabets but very few of these have gained acceptance. An{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  alphabet of Garamond\n                </TextHighlighter>{\" \"}\n                for example, is an artistic achievement of the first order.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <p>\n                Every designer who is concerned with typography should take the\n                trouble when creating graphic designs to{\" \"}\n                <TextHighlighter\n                  ref={(el) => {\n                    if (el) highlighterRefs.current.push(el)\n                  }}\n                  triggerType=\"ref\"\n                  className={highlightClass}\n                  transition={transition}\n                  highlightColor={highlightColor}\n                >\n                  sketch words and sentences by hand\n                </TextHighlighter>\n                . Many designers take advantage of the Letraset process, which\n                can undoubtedly produce a clean draft design that is almost\n                ready for press.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"absolute top-4 left-4 flex gap-4\">\n        <button\n          onClick={isHighlighted ? handleReset : handleHighlight}\n          className=\"text-black border border-border px-3 py-1.5 rounded-md bg-transparent text-xs backdrop-blur-lg cursor-pointer hover:bg-muted\"\n        >\n          {isHighlighted ? \"Reset\" : \"Highlight\"}\n        </button>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:block",
      "target": "components/fancy/text/text-highlighter-ref-demo.tsx"
    }
  ],
  "cssVars": {
    ":root": {
      "red": "#ff5941",
      "orange": "#f97316",
      "pink": "#e794da",
      "blue": "#0015ff",
      "teal": "#1f464d",
      "teal-foreground": "#3bb6ab",
      "yellow": "#eab308",
      "yellow-foreground": "#ffd726",
      "primary-red": "var(--red)",
      "primary-orange": "var(--orange)",
      "primary-pink": "var(--pink)",
      "primary-blue": "var(--blue)"
    }
  },
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  }
}