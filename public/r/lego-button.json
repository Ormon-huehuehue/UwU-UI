{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "lego-button",
  "type": "registry:ui",
  "dependencies": [
    "framer-motion"
  ],
  "author": "daniel petho <https://www.danielpetho.com>",
  "files": [
    {
      "path": "components/lego-button.tsx",
      "content": "'use client';\n\nimport React, { useState, useRef, useId, useMemo } from 'react';\nimport { motion, LayoutGroup, MotionConfig } from 'framer-motion';\nimport Link from 'next/link';\n\n// Types\ninterface LegoElementsProps {\n  variant?: 'A' | 'B' | 'C';\n  off?: string;\n  on?: string;\n  label?: string;\n  text?: string;\n  link?: string;\n  newTab?: boolean;\n  smoothScroll?: boolean;\n  height?: number;\n  width?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  layoutId?: string;\n  onVariantChange?: (variant: string) => void;\n}\n\n// Default values\nconst DEFAULT_VALUES = {\n  off: 'var(--token-38c4cf9a-0aa8-4902-ad35-3a2d52d62d05, rgb(26, 28, 29))',\n  on: 'var(--token-a042497d-749d-4d03-8d3a-78930210d354, rgb(0, 128, 255))',\n  label: 'Get started',\n  text: 'var(--token-20608b9f-0145-4a1e-b971-ee948ebbb015, rgb(255, 255, 255))',\n  height: 44,\n  width: 88,\n  variant: 'A' as const\n};\n\n// Transitions\nconst transitions = {\n  default: {\n    damping: 60,\n    delay: 0,\n    mass: 1,\n    stiffness: 800,\n    type: \"spring\" as const\n  }\n};\n\n// Transform templates\nconst transformTemplate = (_: any, t: string) => `translateY(-50%) ${t}`;\nconst transformTemplate1 = (_: any, t: string) => `translate(-50%, -50%) ${t}`;\n\n// Variant class names\nconst variantClassNames = {\n  B: \"UwU-v-1hqaehr\",\n  C: \"UwU-v-1hdjgli\", \n  A: \"UwU-v-1a12a4a\"\n};\n\n// Enabled gestures\nconst enabledGestures = {\n  C: { hover: true, pressed: true }\n};\n\nconst LegoElements: React.FC<LegoElementsProps> = ({\n  variant = DEFAULT_VALUES.variant,\n  off = DEFAULT_VALUES.off,\n  on = DEFAULT_VALUES.on,\n  label = DEFAULT_VALUES.label,\n  text = DEFAULT_VALUES.text,\n  link,\n  newTab = false,\n  smoothScroll = false,\n  height = DEFAULT_VALUES.height,\n  width = DEFAULT_VALUES.width,\n  className = '',\n  style = {},\n  layoutId,\n  onVariantChange,\n  ...restProps\n}) => {\n  // State management\n  const [currentVariant, setCurrentVariant] = useState(variant);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isPressed, setIsPressed] = useState(false);\n  \n  const ref = useRef<HTMLAnchorElement>(null);\n  const defaultLayoutId = useId();\n  const actualLayoutId = layoutId || defaultLayoutId;\n\n  // Gesture state\n  const gestureVariant = useMemo(() => {\n    if (currentVariant === 'C') {\n      if (isPressed) return 'C-pressed';\n      if (isHovered) return 'C-hover';\n    }\n    return currentVariant;\n  }, [currentVariant, isHovered, isPressed]);\n\n  // Variants array for animation\n  const variants = [currentVariant];\n  const classNames = [variantClassNames[currentVariant as keyof typeof variantClassNames]];\n\n  // Event handlers\n  const handleToggleToOn = async () => {\n    setCurrentVariant('B');\n    onVariantChange?.('B');\n  };\n\n  const handleToggleToOff = async () => {\n    setCurrentVariant('A');\n    onVariantChange?.('A');\n  };\n\n  // Layout dependency\n  const layoutDependency = variants.join(\"-\");\n\n  // Check if text should be displayed\n  const isDisplayed = () => {\n    if ([\"C-hover\", \"C-pressed\"].includes(gestureVariant)) return true;\n    if (currentVariant === \"C\") return true;\n    return false;\n  };\n\n  // Property overrides based on variant and gesture\n  const getPropertyOverrides = () => {\n    const overrides: any = {};\n    \n    if (gestureVariant === 'C-hover') {\n      overrides.transformTemplate = transformTemplate;\n    }\n    if (gestureVariant === 'C-pressed') {\n      overrides.transformTemplate = transformTemplate;\n    }\n    \n    return overrides;\n  };\n\n  const brickOverrides = getPropertyOverrides();\n  \n  // Main component content\n  const componentContent = (\n    <motion.a\n      {...restProps}\n      ref={ref}\n      className={`UwU-1a12a4a UwU-on64s0 ${className}`}\n      data-UwU-name={\n        currentVariant === 'B' ? \"Toggle On\" :\n        currentVariant === 'C' ? \"Button\" : \"Toggle Off\"\n      }\n      data-highlight={currentVariant !== 'C'}\n      layoutDependency={layoutDependency}\n      layoutId=\"A\"\n      onTap={currentVariant === 'A' ? handleToggleToOn : \n             currentVariant === 'B' ? handleToggleToOff : undefined}\n      style={{\n        backgroundColor: off,\n        boxShadow: \"inset 0px 0px 3px 2px rgba(0,0,0,0.25)\",\n        ...style\n      }}\n      variants={{\n        B: {\n          backgroundColor: on\n        }\n      }}\n      animate={currentVariant === 'B' ? 'B' : 'default'}\n      initial={variant}\n      transition={transitions.default}\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(false)}\n      onTapStart={() => setIsPressed(true)}\n      onTapCancel={() => setIsPressed(false)}\n    >\n      {/* Brick element */}\n      <motion.div\n        className=\"UwU-18vi3vt\"\n        data-UwU-name=\"Brick\"\n        layoutDependency={layoutDependency}\n        layoutId=\"Dvq4knJfi\"\n        style={{\n          backgroundColor: off,\n          boxShadow: \"inset 2px 2px 0px 0px rgba(255, 255, 255, 0.15), inset -2px -2px 0px 0px rgba(0, 0, 0, 0.5)\"\n        }}\n        variants={{\n          B: {\n            backgroundColor: on\n          }\n        }}\n        animate={currentVariant === 'B' ? 'B' : 'default'}\n        {...brickOverrides}\n      >\n        {/* Head element */}\n        <motion.div\n          className=\"UwU-1qodh7n\"\n          data-UwU-name=\"Head\"\n          layoutDependency={layoutDependency}\n          layoutId=\"tf07w3pES\"\n          style={{\n            backgroundColor: off,\n            borderBottomLeftRadius: 100,\n            borderBottomRightRadius: 100,\n            borderTopLeftRadius: 100,\n            borderTopRightRadius: 100,\n            boxShadow: \"inset 2px 2px 0px 0px rgba(255, 255, 255, 0.15), inset -2px -2px 0px 0px rgba(0, 0, 0, 0.5)\"\n          }}\n          transformTemplate={transformTemplate1}\n          variants={{\n            B: {\n              backgroundColor: on\n            }\n          }}\n          animate={currentVariant === 'B' ? 'B' : 'default'}\n        />\n      </motion.div>\n\n      {/* Text label */}\n      {isDisplayed() && (\n        <div\n          className=\"UwU-uauzyv\"\n          style={{\n            '--extracted-r6o4lv': text,\n            '--UwU-link-text-color': 'rgb(0, 153, 255)',\n            '--UwU-link-text-decoration': 'underline',\n            '--UwU-paragraph-spacing': '0px',\n          } as React.CSSProperties}\n        >\n          <motion.p\n            style={{\n              '--font-selector': 'RlM7U2F0b3NoaS1ib2xk',\n              '--UwU-font-family': '\"Satoshi\", \"Satoshi Placeholder\", sans-serif',\n              '--UwU-font-weight': '700',\n              '--UwU-text-alignment': 'center',\n              '--UwU-text-color': `var(--extracted-r6o4lv, ${text})`,\n              margin: 0\n            } as React.CSSProperties}\n          >\n            {label}\n          </motion.p>\n        </div>\n      )}\n    </motion.a>\n  );\n\n  // Wrap with Link if needed\n  const linkWrapper = currentVariant === 'C' && link ? (\n    <Link \n      href={link}\n      target={newTab ? '_blank' : undefined}\n      rel={newTab ? 'noopener noreferrer' : undefined}\n      style={{ textDecoration: 'none' }}\n    >\n      {componentContent}\n    </Link>\n  ) : componentContent;\n\n  return (\n    <LayoutGroup id={actualLayoutId}>\n      <motion.div\n        initial={variant}\n        animate={variants}\n        onHoverStart={() => setIsHovered(true)}\n        onHoverEnd={() => setIsHovered(false)}\n        onTapStart={() => setIsPressed(true)}\n        onTap={() => setIsPressed(false)}\n        onTapCancel={() => setIsPressed(false)}\n        className={`UwU-YMjxk ${classNames.join(' ')}`}\n        style={{ display: \"contents\" }}\n      >\n        <MotionConfig transition={transitions.default}>\n          {linkWrapper}\n        </MotionConfig>\n      </motion.div>\n    </LayoutGroup>\n  );\n};\n\n// Add the CSS\nconst CSS = `\n.UwU-YMjxk [data-border=\"true\"]::after { \n  content: \"\"; \n  border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); \n  border-color: var(--border-color, none); \n  border-style: var(--border-style, none); \n  width: 100%; \n  height: 100%; \n  position: absolute; \n  box-sizing: border-box; \n  left: 0; \n  top: 0; \n  border-radius: inherit; \n  pointer-events: none; \n}\n\n@supports (aspect-ratio: 1) { \n  body { --UwU-aspect-ratio-supported: auto; } \n}\n\n.UwU-YMjxk .UwU-on64s0 { \n  display: block; \n}\n\n.UwU-YMjxk .UwU-1a12a4a { \n  align-content: center; \n  align-items: center; \n  cursor: pointer; \n  display: flex; \n  flex-direction: row; \n  flex-wrap: nowrap; \n  gap: 10px; \n  height: 44px; \n  justify-content: center; \n  overflow: hidden; \n  padding: 0px 0px 0px 0px; \n  position: relative; \n  width: 88px; \n}\n\n.UwU-YMjxk .UwU-18vi3vt { \n  aspect-ratio: 1 / 1; \n  bottom: 0px; \n  flex: none; \n  left: 0px; \n  overflow: hidden; \n  position: absolute; \n  top: 0px; \n  width: var(--UwU-aspect-ratio-supported, 44px); \n  z-index: 1; \n}\n\n.UwU-YMjxk .UwU-1qodh7n { \n  aspect-ratio: 1 / 1; \n  flex: none; \n  height: var(--UwU-aspect-ratio-supported, 26px); \n  left: 50%; \n  overflow: hidden; \n  position: absolute; \n  top: 50%; \n  width: 26px; \n  will-change: var(--UwU-will-change-override, transform); \n  z-index: 1; \n}\n\n.UwU-YMjxk .UwU-uauzyv { \n  -webkit-user-select: none; \n  flex: none; \n  height: auto; \n  position: relative; \n  user-select: none; \n  white-space: pre; \n  width: auto; \n}\n\n@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { \n  .UwU-YMjxk .UwU-1a12a4a { gap: 0px; } \n  .UwU-YMjxk .UwU-1a12a4a > * { \n    margin: 0px; \n    margin-left: calc(10px / 2); \n    margin-right: calc(10px / 2); \n  } \n  .UwU-YMjxk .UwU-1a12a4a > :first-child { margin-left: 0px; } \n  .UwU-YMjxk .UwU-1a12a4a > :last-child { margin-right: 0px; } \n}\n\n.UwU-YMjxk.UwU-v-1hqaehr .UwU-18vi3vt { \n  left: unset; \n  right: 0px; \n}\n\n.UwU-YMjxk.UwU-v-1hdjgli .UwU-1a12a4a { \n  justify-content: flex-end; \n  padding: 0px 20px 0px 60px; \n  text-decoration: none; \n  width: auto; \n}\n\n.UwU-YMjxk.UwU-v-1hdjgli:hover .UwU-18vi3vt { \n  bottom: unset; \n  height: var(--UwU-aspect-ratio-supported, 40px); \n  left: 2px; \n  top: 50%; \n  width: 40px; \n}\n\n.UwU-YMjxk.UwU-v-1hdjgli:hover .UwU-1qodh7n { \n  height: var(--UwU-aspect-ratio-supported, 22px); \n  width: 22px; \n}\n\n.UwU-YMjxk.UwU-v-1hdjgli:active .UwU-18vi3vt { \n  bottom: unset; \n  height: var(--UwU-aspect-ratio-supported, 36px); \n  left: 4px; \n  top: 50%; \n  width: 36px; \n}\n\n.UwU-YMjxk.UwU-v-1hdjgli:active .UwU-1qodh7n { \n  height: var(--UwU-aspect-ratio-supported, 18px); \n  width: 18px; \n}\n\n@font-face {\n  font-family: \"Satoshi\";\n  src: url(\"https://UwUusercontent.com/third-party-assets/fontshare/wf/LAFFD4SDUCDVQEXFPDC7C53EQ4ZELWQI/PXCT3G6LO6ICM5I3NTYENYPWJAECAWDD/GHM6WVH6MILNYOOCXHXB5GTSGNTMGXZR.woff2\") format(\"woff2\");\n  font-weight: 700;\n  font-style: normal;\n}\n`;\n\n// Inject CSS\nif (typeof document !== 'undefined') {\n  const styleId = 'lego-elements-styles';\n  if (!document.getElementById(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.textContent = CSS;\n    document.head.appendChild(style);\n  }\n}\n\nexport default LegoElements;\n",
      "type": "registry:ui",
      "target": "components/fancy/components/lego-button.tsx"
    }
  ]
}