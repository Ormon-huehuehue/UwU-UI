{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "underline-goes-out-comes-in",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "motion"
  ],
  "author": "daniel petho <https://www.danielpetho.com>",
  "files": [
    {
      "path": "fancy/text/underline-goes-out-comes-in.tsx",
      "content": "\"use client\"\n\nimport { ElementType, useEffect, useRef, useState, useMemo } from \"react\"\nimport cn from \"clsx\"\nimport {\n  motion,\n  useAnimationControls,\n  ValueAnimationTransition,\n} from \"motion/react\"\n\ninterface GoesOutComesInUnderlineProps {\n  /**\n   * The content to be displayed and animated\n   */\n  children: React.ReactNode\n\n  /**\n   * HTML Tag to render the component as\n   * @default span\n   */\n  as?: ElementType\n\n  /**\n   * Direction of the animation\n   * @default \"left\"\n   */\n  direction?: \"left\" | \"right\"\n\n  /**\n   * Optional class name for styling\n   */\n  className?: string\n\n  /**\n   * Height of the underline as a ratio of font size\n   * @default 0.1\n   */\n  underlineHeightRatio?: number\n\n  /**\n   * Padding of the underline as a ratio of font size\n   * @default 0.01\n   */\n  underlinePaddingRatio?: number\n\n  /**\n   * Animation transition configuration\n   * @default { duration: 0.5, ease: \"easeOut\" }\n   */\n  transition?: ValueAnimationTransition\n}\n\nconst GoesOutComesInUnderline = ({\n  children,\n  as,\n  direction = \"left\",\n  className,\n  underlineHeightRatio = 0.1,\n  underlinePaddingRatio = 0.01,\n  transition = {\n    duration: 0.5,\n    ease: \"easeOut\",\n  },\n  ...props\n}: GoesOutComesInUnderlineProps) => {\n  const controls = useAnimationControls()\n  const [blocked, setBlocked] = useState(false)\n  const textRef = useRef<HTMLSpanElement>(null)\n  const MotionComponent = useMemo(() => motion.create(as ?? \"span\"), [as])\n\n  useEffect(() => {\n    const updateUnderlineStyles = () => {\n      if (textRef.current) {\n        const fontSize = parseFloat(getComputedStyle(textRef.current).fontSize)\n        const underlineHeight = fontSize * underlineHeightRatio\n        const underlinePadding = fontSize * underlinePaddingRatio\n        textRef.current.style.setProperty(\n          \"--underline-height\",\n          `${underlineHeight}px`\n        )\n        textRef.current.style.setProperty(\n          \"--underline-padding\",\n          `${underlinePadding}px`\n        )\n      }\n    }\n\n    updateUnderlineStyles()\n    window.addEventListener(\"resize\", updateUnderlineStyles)\n\n    return () => window.removeEventListener(\"resize\", updateUnderlineStyles)\n  }, [underlineHeightRatio, underlinePaddingRatio])\n\n  const animate = async () => {\n    if (blocked) return\n\n    setBlocked(true)\n\n    await controls.start({\n      width: 0,\n      transition,\n      transitionEnd: {\n        left: direction === \"left\" ? \"auto\" : 0,\n        right: direction === \"left\" ? 0 : \"auto\",\n      },\n    })\n\n    await controls.start({\n      width: \"100%\",\n      transition,\n      transitionEnd: {\n        left: direction === \"left\" ? 0 : \"\",\n        right: direction === \"left\" ? \"\" : 0,\n      },\n    })\n\n    setBlocked(false)\n  }\n\n  return (\n    <MotionComponent\n      className={cn(\"relative inline-block cursor-pointer\", className)}\n      onHoverStart={animate}\n      ref={textRef}\n      {...props}\n    >\n      <span>{children}</span>\n      <motion.span\n        className={cn(\"absolute bg-current\", {\n          \"left-0\": direction === \"left\",\n          \"right-0\": direction === \"right\",\n        })}\n        style={{\n          height: \"var(--underline-height)\",\n          bottom: \"calc(-1 * var(--underline-padding))\",\n          width: \"100%\",\n        }}\n        animate={controls}\n        aria-hidden=\"true\"\n      />\n    </MotionComponent>\n  )\n}\n\nGoesOutComesInUnderline.displayName = \"GoesOutComesInUnderline\"\n\nexport default GoesOutComesInUnderline\n",
      "type": "registry:ui",
      "target": "components/fancy/text/underline-goes-out-comes-in.tsx"
    }
  ]
}