{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "wakatime-stats-card",
  "type": "registry:ui",
  "dependencies": [],
  "author": "daniel petho <https://www.danielpetho.com>",
  "files": [
    {
      "path": "components/wakatime-stats-card.tsx",
      "content": "'use client';\n\nimport React, { useState, useEffect } from 'react';\n\ninterface WakaTimeData {\n  data: {\n    daily_average: number;\n    decimal: string;\n    digital: string;\n    is_up_to_date: boolean;\n    percent_calculated: number;\n    range: {\n      end: string;\n      end_date: string;\n      end_text: string;\n      start: string;\n      start_date: string;\n      start_text: string;\n      timezone: string;\n    };\n    text: string;\n    timeout: number;\n    total_seconds: number;\n  };\n}\n\nfunction WakaTimeStatsCard() {\n  const [stats, setStats] = useState<WakaTimeData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await fetch('/api/wakatime-stats');\n        if (!response.ok) {\n          throw new Error('Failed to fetch stats');\n        }\n        const data = await response.json();\n        setStats(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch stats');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-start mt-8\">\n        <div className=\"flex items-center gap-3 px-6 py-3 bg-zinc-100 dark:bg-zinc-800 rounded-lg border border-zinc-200 dark:border-zinc-700\">\n          <div className=\"flex space-x-1\">\n            <div className=\"w-1.5 h-1.5 bg-zinc-400 rounded-full animate-pulse\"></div>\n            <div className=\"w-1.5 h-1.5 bg-zinc-400 rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }}></div>\n            <div className=\"w-1.5 h-1.5 bg-zinc-400 rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }}></div>\n          </div>\n          <span className=\"text-sm font-medium text-zinc-600 dark:text-zinc-300\">Loading stats</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !stats) {\n    return (\n      <div className=\"flex justify-start mt-8\">\n        <div className=\"px-6 py-3 bg-zinc-100 dark:bg-zinc-800 rounded-lg border border-zinc-300 dark:border-zinc-600\">\n          <span className=\"text-sm font-medium text-zinc-600 dark:text-zinc-400\">Stats unavailable</span>\n        </div>\n      </div>\n    );\n  }\n\n  const formatDailyAverage = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n\n  return (\n    <div className=\"flex flex-col items-start mt-8 w-full max-w-2xl gap-4\">\n      {/* Main card */}\n      <div className=\"group relative overflow-hidden bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-700 rounded-xl p-6 w-full hover:border-zinc-300 dark:hover:border-zinc-600 transition-all duration-300\">\n        {/* Shine effect */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-zinc-100/20 dark:via-zinc-800/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-1000 ease-in-out\"></div>\n        \n        <div className=\"relative z-10\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center gap-2\">\n              <div className={`w-2 h-2 rounded-full ${stats.data.is_up_to_date ? 'bg-green-500' : 'bg-amber-500'}`}></div>\n              <span className=\"text-xs font-medium text-zinc-500 dark:text-zinc-400 uppercase tracking-wider\">\n                {stats.data.is_up_to_date ? 'Live' : 'Syncing'}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-end justify-between\">\n            <div>\n              <div className=\"text-3xl font-bold text-zinc-900 dark:text-zinc-100 mb-2\">\n                {stats.data.text}\n              </div>\n              <div className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                Total coding time\n              </div>\n            </div>\n\n            <div className=\"flex gap-8 text-right\">\n              <div>\n                <div className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                  {formatDailyAverage(stats.data.daily_average)}\n                </div>\n                <div className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                  Daily avg\n                </div>\n              </div>\n              \n              <div>\n                <div className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                  {stats.data.digital}\n                </div>\n                <div className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                  Digital\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Footer */}\n      <div className=\"ml-2 flex justify-between w-full\">\n        <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n          Tracking time since {stats.data.range.start_text}\n        </p>\n        <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n          Stats from WakaTime\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default WakaTimeStatsCard; ",
      "type": "registry:ui",
      "target": "components/fancy/components/wakatime-stats-card.tsx"
    }
  ]
}